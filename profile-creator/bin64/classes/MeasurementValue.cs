//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FTN {
    using System;
    using FTN;
    
    
    /// The current state for a measurement. A state value is an instance of a measurement from a specific source. Measurements can be associated with many state values, each representing a different source for the measurement.
    public class MeasurementValue : IdentifiedObject {
        
        /// The limit, expressed as a percentage of the sensor maximum, that errors will not exceed when the sensor is used under  reference conditions.
        private System.Single? cim_sensorAccuracy;
        
        private const bool isSensorAccuracyMandatory = false;
        
        private const string _sensorAccuracyPrefix = "cim";
        
        /// The time when the value was last updated.
        private System.DateTime? cim_timeStamp;
        
        private const bool isTimeStampMandatory = false;
        
        private const string _timeStampPrefix = "cim";
        
        public virtual float SensorAccuracy {
            get {
                return this.cim_sensorAccuracy.GetValueOrDefault();
            }
            set {
                this.cim_sensorAccuracy = value;
            }
        }
        
        public virtual bool SensorAccuracyHasValue {
            get {
                return this.cim_sensorAccuracy != null;
            }
        }
        
        public static bool IsSensorAccuracyMandatory {
            get {
                return isSensorAccuracyMandatory;
            }
        }
        
        public static string SensorAccuracyPrefix {
            get {
                return _sensorAccuracyPrefix;
            }
        }
        
        public virtual System.DateTime TimeStamp {
            get {
                return this.cim_timeStamp.GetValueOrDefault();
            }
            set {
                this.cim_timeStamp = value;
            }
        }
        
        public virtual bool TimeStampHasValue {
            get {
                return this.cim_timeStamp != null;
            }
        }
        
        public static bool IsTimeStampMandatory {
            get {
                return isTimeStampMandatory;
            }
        }
        
        public static string TimeStampPrefix {
            get {
                return _timeStampPrefix;
            }
        }
    }
}
